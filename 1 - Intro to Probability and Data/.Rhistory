library(ggplot2)
library(statsr)
data(arbuthnot)
data(arbuthnot)
arbuthnot
View(arbuthnot)
dim(arbuthnot)
name(arbuthnot)
names(arbuthnot)
<li> 2 </li>
$girls
arbuthnot$girls
ggplot(data = arbuthnot, aes(x = year, y = girls)) +
geom_point()
ggplot(data = arbuthnot, aes(x = year, y = girls)) +
geom_point()
?ggplot
5218 + 4683
arbuthnot$boys + arbuthnot$girls
arbuthnot <- arbuthnot %>%
```{r calc-total-bapt-numbers}
arbuthnot <- arbuthnot %>%
mutate(total = boys + girls)
ggplot(data = arbuthnot, aes(x=year, y=total)) +
geom_line() + geom_point()
ggplot(data = arbuthnot, aes(x =year, y = boys/total)) +
geom_line() +
geom_point()
arbuthnot <- arbuthnot %>%
mutate(more_boys = boys > girls)
data(present)
data(present)
dim(present)
view(present)
View(present)
present <- present %>%
mutate(total = boys + girls)
present <- present %>%
mutate(prop_boys = boys/total)
ggplot(data = present, aes(x = year, y = prop_boys)) +
geom_point()
# type your code for Question 6 here, and Knit
present <- present %>%
mutate(more_boys = boys > girls)
# type your code for Question 5 here, and Knit
present <- present %>%
mutate(total = boys + girls)
present <- present %>%
mutate(prop_boys = boys/total)
ggplot(data = present, aes(x = year, y = prop_boys)) +
geom_point()
# type your code for Question 7 here, and Knit
present <- present %>%
mutate(prop_boy_girl = boys/girls)
ggplot(data = present, aes(x = year, y = prop_boys)) +
geom_point() +
geom_line()
# type your code for Question 7 here, and Knit
present <- present %>%
mutate(prop_boy_girl = boys/girls)
ggplot(data = present, aes(x = year, y = prop_boy_girl)) +
geom_point() +
geom_line()
# type your code for Question 8 here
# sample code is provided below, edit as necessary, uncomment, and then Knit
present %>%
mutate(total = boys+girls) %>%
arrange(desc(total))
?max()
# type your code for Question 8 here
# sample code is provided below, edit as necessary, uncomment, and then Knit
present %>%
mutate(total = boys+girls) %>%
arrange(desc(total))
max(total)
# type your code for Question 8 here
# sample code is provided below, edit as necessary, uncomment, and then Knit
present %>%
mutate(total = boys+girls) %>%
arrange(desc(total))
max(present$total)
library(statsr)
library(dplyr)
library(ggplot2)
data(nycflights)
library(statsr)
View(arbuthnot)
View(present)
library(statsr)
library(dplyr)
library(ggplot2)
library(statsr)
library(dplyr)
library(ggplot2)
data(nycflights)
data(nycflights)
names(nycflights)
?nycflights
str(nycflights)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram()
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 15)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 150)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 15)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 150)
rdu_flights <- nycflights %>%
filter(dest == "RDU")
ggplot(data = rdu_flights, aes(x = dep_delay))+
geom_histogram()
rdu_flights <- nycflights %>%
filter(dest == "RDU")
ggplot(data = rdu_flights, aes(x = dep_delay)) +
geom_histogram()
rdu_flights <- nycflights %>%
filter(dest == "RDU")
ggplot(data = rdu_flights, aes(x = dep_delay)) +
geom_histogram()
rdu_flights %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
rdu_flights %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay), n = n())
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month ==2)
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
# type your code for Question 1 here, and Knit
sumarrise(n=n())
# type your code for Question 1 here, and Knit
summarise(n=n())
# type your code for Question 1 here, and Knit
sfo_feb_flights %<%
summarise(n=n())
# type your code for Question 1 here, and Knit
sfo_feb_flights %>%
summarise(n=n())
ggplot(data = sfo_feb_flights, aes(x = arr_delay)) +
# type your code for Question 2 here, and Knit
ggplot(data = sfo_feb_flights, aes(x = arr_delay)) +
geom_histogram()
# type your code for Question 2 here, and Knit
ggplot(data = sfo_feb_flights, aes(x = arr_delay)) +
geom_histogram()
sfo_feb_flights %>%
summarise(mean_ad = mean(arr_delay), sd_ad = sd(dep_delay), n=n())
# type your code for Question 2 here, and Knit
ggplot(data = sfo_feb_flights, aes(x = arr_delay)) +
geom_histogram()
sfo_feb_flights %>%
summarise(mean_ad = mean(arr_delay), sd_ad = sd(dep_delay), n=n())
# type your code for Question 3 here, and Knit
ggplot(data = sfo_feb_flights, aes(x = arr_delay)) +
geom_histogram(bins = 15)
sfo_feb_flights %>%
group_by(origin) %>%
summarise(mean_ad = mean(arr_delay), median_ad = median(arr_delay), sd_ad = sd(arr_delay), IQR_ad = IQR(arr_delay), n=n())
# type your code for Question 3 here, and Knit
ggplot(data = sfo_feb_flights, aes(x = arr_delay)) +
geom_histogram(bins = 10)
sfo_feb_flights %>%
group_by(origin) %>%
summarise(mean_ad = mean(arr_delay), median_ad = median(arr_delay), sd_ad = sd(arr_delay), IQR_ad = IQR(arr_delay), n=n())
# type your code for Question 3 here, and Knit
ggplot(data = sfo_feb_flights, aes(x = arr_delay)) +
geom_histogram(bins = 1)
sfo_feb_flights %>%
group_by(origin) %>%
summarise(mean_ad = mean(arr_delay), median_ad = median(arr_delay), sd_ad = sd(arr_delay), IQR_ad = IQR(arr_delay), n=n())
# type your code for Question 3 here, and Knit
ggplot(data = sfo_feb_flights, aes(x = arr_delay)) +
geom_histogram(bins = 30)
sfo_feb_flights %>%
group_by(origin) %>%
summarise(mean_ad = mean(arr_delay), median_ad = median(arr_delay), sd_ad = sd(arr_delay), IQR_ad = IQR(arr_delay), n=n())
View(sfo_feb_flights)
# type your code for Question 3 here, and Knit
ggplot(data = sfo_feb_flights, aes(x = arr_delay)) +
geom_histogram(bins = 30)
sfo_feb_flights %>%
group_by(carrier) %>%
summarise(mean_ad = mean(arr_delay), median_ad = median(arr_delay), sd_ad = sd(arr_delay), IQR_ad = IQR(arr_delay), n=n())
nycflights %>%
group_by(month) %>%
summarise(mean_dd = mean(dep_delay)) %>%
arrange(desc(mean_dd))
# type your code for Question 4 here, and Knit
nycflights %>%
group_by(month) %>%
summarise(mean_dd = mean(dep_delay)) %>%
arrange(desc(mean_dd))
# type your code for Question 5 here, and Knit
nycflights %>%
group_by(month) %>%
summarise(median_dd = median(dep_delay)) %>%
arrange(desc(median_dd))
ggplot(nycflights, aes(x = factor(month), y = dep_delay)) +
geom_boxplot()
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay < 5, "on time", "delayed"))
nycflights %>%
group_by(origin) %>%
summarise(ot_dep_rate = sum(dep_type == "on time") / n()) %>%
arrange(desc(ot_dep_rate))
# type your code for Question 8 here, and Knit
nycflights <- nycflights %>%
mutate(avg_speed = distance/(air_time/60)
# type your code for Question 8 here, and Knit
nycflights <- nycflights %>%
mutate(avg_speed = distance/(air_time/60))
# type your code for Question 8 here, and Knit
nycflights <- nycflights %>%
mutate(avg_speed = distance/(air_time/60))
# type your code for Question 8 here, and Knit
nycflights <- nycflights %>%
mutate(avg_speed = distance/(air_time/60))
select(avg_speed, tailnum)
# type your code for Question 8 here, and Knit
nycflights <- nycflights %>%
mutate(avg_speed = distance/(air_time/60))
select(avg_speed, tailnum)
# type your code for Question 8 here, and Knit
nycflights <- nycflights %>%
mutate(avg_speed = distance/(air_time/60))
select(avg_speed, tailnum)
# type your code for Question 8 here, and Knit
nycflights <- nycflights %>%
mutate(avg_speed = distance/(air_time/60))
nycflights %>%
select(avg_speed, tailnum)
# type your code for Question 8 here, and Knit
nycflights <- nycflights %>%
mutate(avg_speed = distance/(air_time/60))
nycflights %>%
arrange(desc(avg_speed))
select(avg_speed, tailnum)
# type your code for Question 8 here, and Knit
nycflights <- nycflights %>%
mutate(avg_speed = distance/(air_time/60))
nycflights %>%
arrange(desc(avg_speed)) +
select(avg_speed, tailnum)
# type your code for Question 8 here, and Knit
nycflights <- nycflights %>%
mutate(avg_speed = distance/(air_time/60))
nycflights %>%
arrange(desc(avg_speed)) +
select(avg_speed, tailnum)
# type your code for Question 8 here, and Knit
nycflights <- nycflights %>%
mutate(avg_speed = distance/(air_time/60))
nycflights %>%
arrange(desc(avg_speed)) %>%
select(avg_speed, tailnum)
# type your code for Question 9 here, and Knit
ggplot(data = nycflights, aes(x = avg_speed, y = distance)) +
geom_scatter()
# type your code for Question 9 here, and Knit
ggplot(data = nycflights, aes(x = avg_speed, y = distance)) +
geom_scatterplot()
# type your code for Question 9 here, and Knit
ggplot(data = nycflights, aes(x = avg_speed, y = distance)) +
geom_point()
# type your code for Question 9 here, and Knit
ggplot(data = nycflights, aes(x = distance, y = avg_speed)) +
geom_point()
# type your code for Question 9 here, and Knit
ggplot(data = nycflights, aes(x = avg_speed, y = distance)) +
geom_point()
# type your code for Question 9 here, and Knit
ggplot(data = nycflights, aes(x = distance, y = avg_speed)) +
geom_point()
# type your code for Question 9 here, and Knit
ggplot(data = nycflights, aes(x = avg_speed, y = distance)) +
geom_point()
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay < 0, "on time", "delayed"))
nycflights %>%
group_by(origin) %>%
summarise(ot_arr_rate = sum(arr_type == "on time") / n()) %>%
arrange(desc(ot_arr_rate))
# type your code for Question 7 here, and Knit
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay < 5, "on time", "delayed"))
nycflights %>%
group_by(origin) %>%
summarise(ot_dep_rate = sum(dep_type == "on time") / n()) %>%
arrange(desc(ot_dep_rate))
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay < 0, "on time", "delayed"))
nycflights %>%
summarise(ot_arr_rate = sum(arr_type == "on time") / n()) %>%
arrange(desc(ot_arr_rate))
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay < 0, "on time", "delayed"))
nycflights %>%
group_by(origin) %>%
summarise(ot_arr_rate = sum(arr_type == "on time") / n()) %>%
arrange(desc(ot_arr_rate))
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay < 0, "on time", "delayed"))
nycflights %>%
summarise(ot_arr_rate = sum(arr_type == "on time") / n()) %>%
arrange(desc(ot_arr_rate))
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay < 0, "on time", "delayed"))
nycflights %>%
summarise(ot_arr_rate = sum(arr_type == "on time") / n())
summarise(de_dep_rate = sum(dep_type == "on time") / n())
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay < 0, "on time", "delayed"))
nycflights %>%
summarise(ot_arr_rate = sum(arr_type == "on time") / n())
summarise(de_dep_rate = sum(dep_type == "delayed") / n())
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay < 0, "on time", "delayed"))
nycflights %>%
summarise(prop_delayed_ontime = de_dep_rate/ot_arr_rate)
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay < 0, "on time", "delayed"))
nycflights %>%
summarise(prop_delayed_ontime = sum(dep_type == "delayed")/sum(arr_type == "on time"))
nycflights %>%
summarise(ot_arr_rate = sum(arr_type == "on time") / n())
summarise(de_dep_rate = sum(dep_type == "delayed") / n())
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay < 0, "on time", "delayed"))
nycflights %>% filter(dep_type== "delayed") %>% summarise(rate=sum(arr_type=="on time"")/n())
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay < 0, "on time", "delayed"))
nycflights %>%
filter(dep_type== "delayed") %>% summarise(rate=sum(arr_type=="on time"")/n())
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay < 0, "on time", "delayed"))
nycflights %>%
filter(dep_type == "delayed") %>%
summarise(rate=sum(arr_type=="on time"")/n())
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay < 0, "on time", "delayed"))
nycflights %>%
filter(dep_type == "delayed") %>%
summarise(rate=sum(arr_type=="on time)/n())
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay < 0, "on time", "delayed"))
nycflights %>%
filter(dep_type == "delayed") %>%
summarise(rate=sum(arr_type == "on time")/n())
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay < 0, "on time", "delayed"))
# type your code for Question 10 here, and Knit
#nycflights <- nycflights %>%
#  mutate(arr_type = ifelse(arr_delay < 0, "on time", "delayed"))
nycflights %>%
filter(dep_type == "delayed") %>%
summarise(rate=sum(arr_type == "on time")/n())
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay < 0, "on time", "delayed"))
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay < 0, "on time", "delayed"))
library(statsr)
library(dplyr)
library(ggplot2)
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay < 0, "on time", "delayed"))
nycflights %>%
filter(dep_type == "delayed") %>%
summarise(rate=sum(arr_type == "on time")/n())
View(nycflights)
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay < 0, "on time", "delayed"))
nycflights %>%
filter(dep_type == "delayed") %>%
summarise(rate=sum(arr_type == "on time")/n(dep_type == "delayed"))
# type your code for Question 10 here, and Knit
nycflights <- nycflights %>%
mutate(arr_type = ifelse(arr_delay < 0, "on time", "delayed"))
nycflights %>%
filter(dep_type == "delayed") %>%
summarise(rate=sum(arr_type == "on time")/sum(dep_type == "delayed"))
library(statsr)
library(dplyr)
library(ggplot2)
data(kobe_basket)
data(kobe_basket)
data(kobe_basket)
library(statsr)
library(dplyr)
library(ggplot2)
data(kobe_basket)
data(kobe_basket)
data("kobe_basket")
data(kobe_basket)
dbinom(2,3,0.51)
dbinom(1,10,0.0.07)
dbinom(1,10,0.07)
dbinom(35,3000000,0.00001)
pbinom(35,3000000,0.00001,lower.tail = FALSE)
pbinom(35,3000000,0.00001,lower.tail = TRUE)
grep("singlefav", names(selected_nzes2011), value = TRUE)
library(dplyr)
grep("singlefav", names(selected_nzes2011), value = TRUE)
grep("singlefav", names(selected_nzes2011.RData), value = TRUE)
load("selected_nzes2011.Rdata")
setwd("~/Documents/Coursera/Intro to Statistics")
load("selected_nzes2011.Rdata")
grep("singlefav", names(selected_nzes2011.RData), value = TRUE)
grep("singlefav", names(selected_nzes2011.Rdata), value = TRUE)
selected_nzes2011
selected_nzes2011 %>%
select(jpartyvote, jdiffvoting, _singlefav)
names(selected_nzes2011)
grep("singlefav", names(selected_nzes2011), value = TRUE)
selected_nzes2011 %>%
select(jpartyvote, jdiffvoting, X_singlefav) %>%
str()
selected_nzes2011 %>%
group_by(jpartyvote) %>%
summarise(count = n())
selected_nzes2011 %>%
filter(jpartyvote != "Don't know") %>%
group_by(jpartyvote) %>%
summarise(count = n())
selected_nzes2011 %>%
group_by(X_singlefav) %>%
summarise(count = n())
selected_nzes2011 %>%
filter(!is.na(X_singlefav)) %>%
group_by(X_singlefav) %>%
summarise(count = n())
selected_nzes2011 %>%
filter(!is.na(X_singlefav), jpartyvote != "Don't know") %>%
group_by(X_singlefav) %>%
summarise(count=n())
selected_nzes2011 %>%
group_by(jdiffvoting) %>%
summarise(count = n())
selected_nzes2011 <- selected_nzes2011 %>%
mutate(sameparty = ifelse(jpartyvote == X_singlefav, "same", "different"))
selected_nzes2011 %>%
group_by(jpartyvote, X_singlefav, sameparty) %>%
summarise(count = n())
selected_nzes2011 %>%
group_by(jpartyvote, X_singlefav, sameparty) %>%
summarise(count = n()) %>%
filter(sameparty == "same")
selected_nzes2011 %>%
group_by(jpartyvote, X_singlefav, sameparty) %>%
summarise(count = n()) %>%
filter(sameparty == "different")
selected_nzes2011 %>%
group_by(jpartyvote, X_singlefav, sameparty) %>%
summarise(count = n()) %>%
filter(is.na(sameparty))
str(selected_nzes2011$jnzflike)
str(selected_nzes2011$jage)
selected_nzes2011 %>%
group_by(jnzflike) %>%
summarise(count = n())
selected_nzes2011 %>%
summarise(agemean = mean(jage), agemedian = median(jage), agesd = sd(jage),
agemin = min(jage), agemax = max(jage))
?median
selected_nzes2011 %>%
filter(!(is.na(jage))) %>%
summarise(agemean = mean(jage), agemedian = median(jage), agesd = sd(jage),
agemin = min(jage), agemax = max(jage))
selected_nzes2011 %>%
filter(jnzflike %in% c("0","10")) %>%
group_by(jnzflike) %>%
summarise(count = n())
selected_nzes2011 <- selected_nzes2011 %>%
mutate(retiredage = ifelse(jage >= 65, "retired age", "working age"))
selected_nzes2011 %>%
group_by(retiredage) %>%
summarise(count = n())
selected_nzes2011 %>%
group_by(retiredage) %>%
summarise(medlike = median(jnzflike))
selected_nzes2011 <- selected_nzes2011 %>%
mutate(numlikenzf = as.numeric(jnzflike))
selected_nzes2011 %>%
group_by(jnzflike, numlikenzf) %>%
summarise(count = n())
selected_nzes2011 <- selected_nzes2011 %>%
mutate(numlikenzf = as.numeric(as.character(jnzflike)))
selected_nzes2011 %>%
group_by(jnzflike, numlikenzf) %>%
summarise(count = n())
